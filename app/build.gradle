import java.nio.file.Files
import java.util.zip.ZipFile
import groovy.json.JsonSlurper
import java.util.logging.Logger

Logger logger = Logger.getLogger("")

apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

def slurper = new JsonSlurper()

def appName = "customzipapp"
def iconPathStr = "./icon/icon.png"

if(project.hasProperty("zipPath")) {
    def zipReader = new ZipFile(project.zipPath)
    def confEntry = zipReader.getEntry("config.json")
    def inpStream = zipReader.getInputStream(confEntry)
    def configStr = inpStream.text

    def config = slurper.parseText(configStr)
    def zipName = config.name
    appName = zipName.replaceAll(' ', '').toLowerCase()

    if(config.icon) {
        def iconEntry = zipReader.getEntry(config.icon)
        def iconInpStream = zipReader.getInputStream(iconEntry)
        def outStream = new FileOutputStream(iconPathStr);
        outStream << iconInpStream
    }
}

def iconPath = new File(iconPathStr)

def iconTargetPath = new File("app/src/main/res/mipmap-xxhdpi/ic_launcher_foreground.png")

iconTargetPath.delete()
Files.copy(iconPath.toPath(), iconTargetPath.toPath())

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "app.zipternet.$appName"
        manifestPlaceholders = [appLabel:appName]
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 10
        versionName "0.2"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            resValue "string", "app_name", appName
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:design:28.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation "org.jetbrains.anko:anko:$anko_version"
    implementation 'com.google.code.gson:gson:2.8.5'

    def appCenterSdkVersion = '2.1.0'
    implementation "com.microsoft.appcenter:appcenter-analytics:${appCenterSdkVersion}"
    implementation "com.microsoft.appcenter:appcenter-crashes:${appCenterSdkVersion}"
}
